permissions:
  contents: read

name: LocaleCash Testing

on:
  # Manual trigger for Jenkins or other external systems
  workflow_dispatch:

env:
  NODE_VERSION: '18.17.0'
  PNPM_VERSION: '9.15.9'

jobs:
  test:
    name: Run LocaleCash Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TEST_ENV: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        working-directory: ./apps/localecash-testing
        run: pnpm exec playwright install chromium --with-deps

      - name: Setup authentication data
        working-directory: ./apps/localecash-testing
        run: |
          echo "🔑 Setting up authentication data for dev environment"
          
          # Create data-auth directory structure
          mkdir -p data-auth/dev
          
          # Check if secrets exist before decoding
          echo "🔍 Checking secrets availability..."
          if [ -z '${{ secrets.DEV_SELLER_AUTH }}' ]; then
            echo "❌ DEV_SELLER_AUTH secret is missing or empty"
            exit 1
          fi
          if [ -z '${{ secrets.DEV_BUYER_AUTH }}' ]; then
            echo "❌ DEV_BUYER_AUTH secret is missing or empty"
            exit 1
          fi
          if [ -z '${{ secrets.DEV_SELLER_INDEXEDDB }}' ]; then
            echo "❌ DEV_SELLER_INDEXEDDB secret is missing or empty"
            exit 1
          fi
          if [ -z '${{ secrets.DEV_BUYER_INDEXEDDB }}' ]; then
            echo "❌ DEV_BUYER_INDEXEDDB secret is missing or empty"
            exit 1
          fi
          echo "✅ All secrets are available"
          
          # Decode and create auth files from secrets
          echo "📝 Creating auth files..."
          echo '${{ secrets.DEV_SELLER_AUTH }}' | base64 -d > data-auth/dev/seller-auth.json 2>/dev/null
          echo '${{ secrets.DEV_BUYER_AUTH }}' | base64 -d > data-auth/dev/buyer-auth.json 2>/dev/null
          echo '${{ secrets.DEV_SELLER_INDEXEDDB }}' | base64 -d > data-auth/dev/seller-indexeddb-data.json 2>/dev/null
          echo '${{ secrets.DEV_BUYER_INDEXEDDB }}' | base64 -d > data-auth/dev/buyer-indexeddb-data.json 2>/dev/null
          
          # Verify auth files exist and have content
          echo "🔍 Verifying auth files..."
          if [ -f "data-auth/dev/seller-auth.json" ] && [ -s "data-auth/dev/seller-auth.json" ]; then
            echo "✅ Seller auth data loaded ($(wc -c < data-auth/dev/seller-auth.json) bytes)"
          else
            echo "❌ Seller auth data missing or empty"
            exit 1
          fi
          
          if [ -f "data-auth/dev/buyer-auth.json" ] && [ -s "data-auth/dev/buyer-auth.json" ]; then
            echo "✅ Buyer auth data loaded ($(wc -c < data-auth/dev/buyer-auth.json) bytes)"
          else
            echo "❌ Buyer auth data missing or empty"
            exit 1
          fi
          
          if [ -f "data-auth/dev/seller-indexeddb-data.json" ] && [ -s "data-auth/dev/seller-indexeddb-data.json" ]; then
            echo "✅ Seller IndexedDB data loaded ($(wc -c < data-auth/dev/seller-indexeddb-data.json) bytes)"
          else
            echo "❌ Seller IndexedDB data missing or empty"
            exit 1
          fi
          
          if [ -f "data-auth/dev/buyer-indexeddb-data.json" ] && [ -s "data-auth/dev/buyer-indexeddb-data.json" ]; then
            echo "✅ Buyer IndexedDB data loaded ($(wc -c < data-auth/dev/buyer-indexeddb-data.json) bytes)"
          else
            echo "❌ Buyer IndexedDB data missing or empty"
            exit 1
          fi
          
          echo "🎉 All authentication data setup complete!"

      - name: Run dev tests
        working-directory: ./apps/localecash-testing
        run: pnpm run test:dev:random
        env:
          CI: true